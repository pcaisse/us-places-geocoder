#!/bin/bash
set -eux

start_year=$1
end_year=$2
output_dir=$3

if [ ! -d "$output_dir" ]; then
  echo "$output_dir does not exist."
  exit 1;
fi

population_data_file_url="https://www2.census.gov/programs-surveys/popest/datasets/${start_year}-${end_year}/cities/totals/sub-est${end_year}.csv"

tempfile=`mktemp`
curl $population_data_file_url --compressed --retry 5 --retry-all-errors -o $tempfile

# Filter CSV down to relevant columns
awk -F"," "
NR==1 {
    for (i=1; i<=NF; i++) {
        f[\$i] = i
    }
}
{print \$(f[\"STATE\"])(\$(f[\"COUNTY\"]) == \"000\" ? \"\" : \$(f[\"COUNTY\"]))(\$(f[\"PLACE\"]) == \"00000\" ? \"\" : \$(f[\"PLACE\"]))\",\"\$(f[\"POPESTIMATE$end_year\"]) }
" $tempfile |
  # Convert CSV to JSON
  csvtojson --ignoreEmpty=true --colParser="{\"POPESTIMATE$end_year\":\"number\"}" |
    # Transform into object of geoid -> population estimate
    jq "map({key: .STATECOUNTYPLACE, value: .POPESTIMATE$end_year}) | from_entries" > "$output_dir/place_populations.json"
